<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>${tagLibName} ${tag.tagName} Report</title>
</head>
<style>
iframe {
	border: inset;
	width: 95%;
}
.pass {
	background-color: #44ff44;
}

.safe {
	background-color: #9999ff;
}

.fail {
	background-color: red;
}

.not-tested {
	background-color: yellow;
}

.display {
	display: inline;
}

.hidden {
	display: none;
}
</style>
<script>

var hasRun = new Array();
function breakIt(id)
{
//alert('breakit called by ' + id);
 if (!hasRun[id])
 {
  hasRun[id] = 1;
 }

 if (hasRun[id] > 1) 
 { 
  return;
 }

 hasRun[id]++;

 var breakNode = document.getElementById(id);
 breakNode.className="fail";

}

function passIt(id)
{
	//alert('passit called by ' + id);
	var passNode = document.getElementById(id);
	passNode.className="pass";
}

function safeIt(id)
{
	//alert('safeit called by ' + id);
	var safeNode = document.getElementById(id);
	safeNode.className="safe";
}

function testIt(id,msg)
{
	//alert('testIt called by ' + id);
	var testNode = document.getElementById(id);
	testNode.className="not-tested";
	testNode.title=msg;
}

function toggleFrame(name)
{
	var frameNode = document.getElementById(name);
	if (frameNode.className == undefined 
			|| frameNode.className == null
			|| frameNode.className == "display")
	{ 	
		frameNode.className="hidden";
	}
	else
	{
		frameNode.className="display";
	}
}

function stripFrameNamespace(name)
{
	if (name != undefined && name != null && name.indexOf("-${frame_namespace}") >= 0)
	{
		return name.substring(0, name.indexOf("-${frame_namespace}"));
	}
	
	return "";
}

function checkFrame(frame)
{
	//var frame = window.frames[name];
	var frameDoc = frame.document;

	if (frameDoc != undefined && frameDoc != null)
	{
		var result = frameDoc.getElementById( "result" );
		
		if ( result != undefined && result != null
				&& result.value != undefined
				&& result.value != null)
		{
			
			eval( result.value );
		}
		else
		{
			var error = frameDoc.getElementById( "error" );
			if ( error != undefined && error != null
				&& error.value != undefined
				&& error.value != null)
			{
			
				testIt( stripFrameNamespace( frame.name ), error.value );
			}
		}
	}
}

function runTest(name)
{
	for ( frameIdx=0; frameIdx < window.frames.length; frameIdx++ )
	{
		if (window.frames[frameIdx].name == name)
		{
			checkFrame( window.frames[frameIdx] );
		}
	}
}
</script>

<body>
<h1>${tagLibName} Report</h1>

<!-- Begin Tag Report Results -->

#foreach(${tag} in ${tagLib.tags})
<h3>${tag.tagName}</h3>
<table border="1">
	<tr>
		<th>Attribute</th>
#foreach(${attack} in ${attacks})		
		<th>${attack.displayName}</th>
#end
	</tr>
	<tr>
		<td><em>tag text</em></td>
#foreach(${attack} in ${attacks})		
		<td id="${tag.tagName}-${attack.name}" onclick="toggleFrame('${tag.tagName}-${attack.name}-${frame_namespace}')">&nbsp;</td>
#end
	</tr>
#foreach(${attribute} in ${tag.attributes})	
	<tr>
		<td>${attribute.name}</td>
#foreach(${attack} in ${attacks})		
		<td id="${tag.tagName}-${attribute.name}-${attack.name}" onclick="toggleFrame('${tag.tagName}-${attribute.name}-${attack.name}-${frame_namespace}')">&nbsp;</td>
#end
	</tr>
#end
</table>
#end

<!-- End Tag Report Results -->

<!-- Begin Tag Test Cases -->

#foreach(${attack} in ${attacks})
<div class="hidden" id="${tag.tagName}-${attack.name}-${frame_namespace}">
<h1>${tag.tagName} - ${attack.displayName}</h1>
<iframe name="${tag.tagName}-${attack.name}-${frame_namespace}" src="${context_root}${tag.tagName}-${attack.name}${extension}" onload="runTest(this.name)"></iframe>
</div>
#end

#foreach(${attribute} in ${tag.attributes})	
#foreach(${attack} in ${attacks})
<div class="hidden" id="${tag.tagName}-${attribute.name}-${attack.name}-${frame_namespace}">
<h1>${tag.tagName} - ${attribute.name} - ${attack.displayName}</h1>
<iframe name="${tag.tagName}-${attribute.name}-${attack.name}-${frame_namespace}" src="${context_root}${tag.tagName}-${attribute.name}-${attack.name}${extension}" onload="runTest(this.name)"></iframe>
</div>
#end
#end

<!-- End Tag Test Cases -->
</body>
</html>